---
const educationData = {
  title: "Formación Académica",
  subtitle: "Educación formal y especializada en desarrollo de software",

  timeline: [
    {
      year: "2025",
      period: "Presente",
      institution: "Campuslands",
      degree: "Bootcamp Desarrollo de Software",
      description: "Formación intensiva en desarrollo Full Stack con tecnologías modernas",
      type: "professional",
      highlights: [
        "Desarrollo de proyectos reales con metodologías ágiles",
        "Especialización en Python, JavaScript, React y Node.js",
        "Prácticas con integración de APIs y bases de datos",
        "Trabajo colaborativo con Git y GitHub"
      ],
      status: "current"
    },
    {
      year: "2010",
      period: "2015",
      institution: "Colegio Aurelio Martínez Mutis",
      degree: "Bachillerato Académico",
      description: "Formación académica integral con énfasis en ciencias exactas",
      type: "academic",
      highlights: [
        "Sólida base en matemáticas y ciencias",
        "Desarrollo de pensamiento lógico y analítico",
        "Habilidades de investigación y resolución de problemas"
      ],
      status: "completed"
    }
  ]
};
---

<section id="educacion" class="section-padding animate-on-scroll">
  <div class="container">
    <div class="education-content">
      <!-- Header -->
      <div class="education-header">
        <h2 class="section-title gradient-text">{educationData.title}</h2>
        <p class="section-subtitle">{educationData.subtitle}</p>
      </div>

      <!-- Timeline -->
      <div class="timeline-container">
        <div class="timeline-line"></div>
        <div class="timeline-items card-animate">
          {educationData.timeline.map((item, index) => (
            <div class={`timeline-item ${item.status}`} data-index={index}>
              <div class="timeline-marker">
                <div class="timeline-dot"></div>
                <div class="timeline-connector"></div>
              </div>

              <div class="timeline-content">
                <div class="timeline-card">
                  <div class="card-header">
                    <div class="period-badge">
                      <span class="year-start">{item.year}</span>
                      {item.period !== item.year && (
                        <>
                          <span class="period-separator">-</span>
                          <span class="year-end">{item.period}</span>
                        </>
                      )}
                    </div>
                    <div class={`status-badge ${item.status}`}>
                      {item.status === 'current' ? 'En curso' : 'Completado'}
                    </div>
                  </div>

                  <h3 class="degree-title">{item.degree}</h3>
                  <h4 class="institution-name">{item.institution}</h4>
                  <p class="description">{item.description}</p>

                  <div class="highlights">
                    <h5 class="highlights-title">Aspectos destacados:</h5>
                    <ul class="highlights-list">
                      {item.highlights.map((highlight) => (
                        <li>{highlight}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<style>
/* Section Styling */
#educacion {
  background: linear-gradient(135deg, var(--primary-50) 0%, var(--neutral-50) 100%);
  position: relative;
}

.education-content {
  position: relative;
  z-index: 1;
}

/* Header */
.education-header {
  text-align: center;
  margin-bottom: 4rem;
}

.section-title {
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 800;
  margin-bottom: 1rem;
  letter-spacing: -0.02em;
}

.section-subtitle {
  font-size: 1.25rem;
  color: var(--neutral-600);
  font-weight: 500;
  margin: 0;
}

/* Timeline */
.timeline-container {
  position: relative;
  max-width: 900px;
  margin: 0 auto;
}

.timeline-line {
  position: absolute;
  left: 2rem;
  top: 0;
  bottom: 0;
  width: 2px;
  background: linear-gradient(180deg, var(--primary-300), var(--accent-300));
  border-radius: 1px;
}

.timeline-items {
  display: flex;
  flex-direction: column;
  gap: 3rem;
}

.timeline-item {
  position: relative;
  display: flex;
  align-items: flex-start;
  gap: 2rem;
}

/* Timeline Markers */
.timeline-marker {
  position: relative;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.timeline-dot {
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  background: var(--primary-500);
  border: 3px solid white;
  box-shadow: 0 0 0 3px var(--primary-200);
  z-index: 2;
  transition: all var(--transition-base);
}

.timeline-item.current .timeline-dot {
  background: var(--accent-500);
  box-shadow: 0 0 0 3px var(--accent-200), 0 0 20px var(--accent-300);
  animation: pulse-dot 2s ease-in-out infinite;
}

.timeline-item:hover .timeline-dot {
  transform: scale(1.2);
}

/* Timeline Content */
.timeline-content {
  flex: 1;
  margin-top: -0.5rem;
}

.timeline-card {
  background: rgba(255, 255, 255, 0.9);
  border-radius: var(--radius-xl);
  padding: 2rem;
  border: 1px solid var(--primary-200);
  box-shadow: var(--shadow-lg);
  transition: all var(--transition-base);
  position: relative;
  overflow: hidden;
}

.timeline-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, var(--primary-50), transparent);
  transition: left 0.6s;
}

.timeline-card:hover::before {
  left: 100%;
}

.timeline-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-xl);
  border-color: var(--primary-300);
}

/* Card Header */
.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.period-badge {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: linear-gradient(135deg, var(--primary-100), var(--accent-100));
  border-radius: var(--radius-md);
  font-weight: 600;
  color: var(--primary-700);
}

.year-start, .year-end {
  font-size: 1rem;
}

.period-separator {
  color: var(--neutral-400);
}

.status-badge {
  padding: 0.25rem 0.75rem;
  border-radius: var(--radius-md);
  font-size: 0.875rem;
  font-weight: 500;
}

.status-badge.current {
  background: var(--accent-100);
  color: var(--accent-700);
}

.status-badge.completed {
  background: var(--neutral-100);
  color: var(--neutral-600);
}

/* Card Content */
.degree-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--neutral-800);
  margin-bottom: 0.5rem;
}

.institution-name {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--primary-600);
  margin-bottom: 1rem;
}

.description {
  font-size: 1rem;
  color: var(--neutral-600);
  line-height: 1.6;
  margin-bottom: 1.5rem;
}

/* Highlights */
.highlights-title {
  font-size: 1rem;
  font-weight: 600;
  color: var(--neutral-800);
  margin-bottom: 0.75rem;
}

.highlights-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.highlights-list li {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: var(--neutral-600);
  line-height: 1.5;
}

.highlights-list li::before {
  content: '✓';
  color: var(--accent-500);
  font-weight: bold;
  flex-shrink: 0;
  margin-top: 0.125rem;
}

/* Animations */
@keyframes pulse-dot {
  0%, 100% {
    box-shadow: 0 0 0 3px var(--accent-200), 0 0 20px var(--accent-300);
  }
  50% {
    box-shadow: 0 0 0 6px var(--accent-200), 0 0 30px var(--accent-300);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .timeline-line {
    left: 1rem;
  }

  .timeline-item {
    gap: 1rem;
  }

  .timeline-card {
    padding: 1.5rem;
  }

  .card-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .degree-title {
    font-size: 1.25rem;
  }
}
</style>